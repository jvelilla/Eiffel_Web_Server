INCLUDE_PATH =  -I"C:\Python27\eve\library\process\classic\windows\include" -I"C:\Python27\eve\library\wel\spec\windows\include"
SHELL = \bin\sh
CC = cl
CPP = cl
CFLAGS = -Od -MT -w -nologo -D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_CRT_SECURE_NO_DEPRECATE -D_UNICODE -DUNICODE  -DEIF_THREADS  -DEIF_IEEE_BEHAVIOR -DWORKBENCH -I"C:\Python27\Eiffel_14.05_95158\studio\spec\win64\include" -I. $(INCLUDE_PATH)
CPPFLAGS = -Od -MT -w -nologo -D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_CRT_SECURE_NO_DEPRECATE -D_UNICODE -DUNICODE  -DEIF_THREADS  -DWORKBENCH -I"C:\Python27\Eiffel_14.05_95158\studio\spec\win64\include" -I. $(INCLUDE_PATH)
LDFLAGS = -STACK:5000000 -NODEFAULTLIB:libc
CCLDFLAGS = -STACK:5000000 -NODEFAULTLIB:libc  -SUBSYSTEM:CONSOLE
LDSHAREDFLAGS =  -dll -incremental:no -NODEFAULTLIB:libc
EIFLIB = "C:\Python27\Eiffel_14.05_95158\studio\spec\win64\lib\msc\mtwkbench.lib"
EIFTEMPLATES = C:\Python27\Eiffel_14.05_95158\studio\config\win64\templates
LIBS = 
MAKE = nmake -s -nologo
AR = 
LD = 
MKDEP =   --
MV = copy
CP = copy
RANLIB = echo
RM = del
FILE_EXIST = if exist
RMDIR = rd
X2C = "C:\Python27\Eiffel_14.05_95158\studio\spec\win64\bin\x2c.exe"
SHAREDLINK = link
SHAREDLIBS = USER32.lib WS2_32.lib ADVAPI32.lib GDI32.lib SHELL32.lib MSIMG32.lib \
	COMDLG32.lib UUID.lib OLE32.lib OLEAUT32.lib COMCTL32.lib MPR.LIB SHLWAPI.LIB WINSPOOL.LIB 
SHARED_SUFFIX = .dll
COMMAND_MAKEFILE = 
START_TEST = if not exist finished 
END_TEST =  
CREATE_TEST = echo "finished" >> finished 
SYSTEM_IN_DYNAMIC_LIB = app.dll 

.SUFFIXES:.cpp .obj 

.c.obj:
	$(CC) $(CFLAGS) -c $<

.cpp.obj:
	$(CPP) $(CPPFLAGS) -c $<

SUBDIRS = C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13 C14 C15 C16 C17 C18 C19 C20 C21 C22 C23 C24 C25 C26 C27 C28 C29 C30 C31 C32 C33 C34 E1

EXTERNALS =  \
	"C:\Python27\eve\library\wel\spec\msc\win64\lib\mtwel.lib" \
	"C:\Python27\eve\library\net\spec\msc\win64\lib\mtnet.lib"

all:: app.exe
	echo done > completed.eif

C1\Cobj1.lib: Makefile E1\estructure.h
	cd C1
	$(START_TEST) $(MAKE) Cobj1.lib $(END_TEST)
	cd ..

C2\Cobj2.lib: Makefile E1\estructure.h
	cd C2
	$(START_TEST) $(MAKE) Cobj2.lib $(END_TEST)
	cd ..

C3\Cobj3.lib: Makefile E1\estructure.h
	cd C3
	$(START_TEST) $(MAKE) Cobj3.lib $(END_TEST)
	cd ..

C4\Cobj4.lib: Makefile E1\estructure.h
	cd C4
	$(START_TEST) $(MAKE) Cobj4.lib $(END_TEST)
	cd ..

C5\Cobj5.lib: Makefile E1\estructure.h
	cd C5
	$(START_TEST) $(MAKE) Cobj5.lib $(END_TEST)
	cd ..

C6\Cobj6.lib: Makefile E1\estructure.h
	cd C6
	$(START_TEST) $(MAKE) Cobj6.lib $(END_TEST)
	cd ..

C7\Cobj7.lib: Makefile E1\estructure.h
	cd C7
	$(START_TEST) $(MAKE) Cobj7.lib $(END_TEST)
	cd ..

C8\Cobj8.lib: Makefile E1\estructure.h
	cd C8
	$(START_TEST) $(MAKE) Cobj8.lib $(END_TEST)
	cd ..

C9\Cobj9.lib: Makefile E1\estructure.h
	cd C9
	$(START_TEST) $(MAKE) Cobj9.lib $(END_TEST)
	cd ..

C10\Cobj10.lib: Makefile E1\estructure.h
	cd C10
	$(START_TEST) $(MAKE) Cobj10.lib $(END_TEST)
	cd ..

C11\Cobj11.lib: Makefile E1\estructure.h
	cd C11
	$(START_TEST) $(MAKE) Cobj11.lib $(END_TEST)
	cd ..

C12\Cobj12.lib: Makefile E1\estructure.h
	cd C12
	$(START_TEST) $(MAKE) Cobj12.lib $(END_TEST)
	cd ..

C13\Cobj13.lib: Makefile E1\estructure.h
	cd C13
	$(START_TEST) $(MAKE) Cobj13.lib $(END_TEST)
	cd ..

C14\Cobj14.lib: Makefile E1\estructure.h
	cd C14
	$(START_TEST) $(MAKE) Cobj14.lib $(END_TEST)
	cd ..

C15\Cobj15.lib: Makefile E1\estructure.h
	cd C15
	$(START_TEST) $(MAKE) Cobj15.lib $(END_TEST)
	cd ..

C16\Cobj16.lib: Makefile E1\estructure.h
	cd C16
	$(START_TEST) $(MAKE) Cobj16.lib $(END_TEST)
	cd ..

C17\Cobj17.lib: Makefile E1\estructure.h
	cd C17
	$(START_TEST) $(MAKE) Cobj17.lib $(END_TEST)
	cd ..

C18\Cobj18.lib: Makefile E1\estructure.h
	cd C18
	$(START_TEST) $(MAKE) Cobj18.lib $(END_TEST)
	cd ..

C19\Cobj19.lib: Makefile E1\estructure.h
	cd C19
	$(START_TEST) $(MAKE) Cobj19.lib $(END_TEST)
	cd ..

C20\Cobj20.lib: Makefile E1\estructure.h
	cd C20
	$(START_TEST) $(MAKE) Cobj20.lib $(END_TEST)
	cd ..

C21\Cobj21.lib: Makefile E1\estructure.h
	cd C21
	$(START_TEST) $(MAKE) Cobj21.lib $(END_TEST)
	cd ..

C22\Cobj22.lib: Makefile E1\estructure.h
	cd C22
	$(START_TEST) $(MAKE) Cobj22.lib $(END_TEST)
	cd ..

C23\Cobj23.lib: Makefile E1\estructure.h
	cd C23
	$(START_TEST) $(MAKE) Cobj23.lib $(END_TEST)
	cd ..

C24\Cobj24.lib: Makefile E1\estructure.h
	cd C24
	$(START_TEST) $(MAKE) Cobj24.lib $(END_TEST)
	cd ..

C25\Cobj25.lib: Makefile E1\estructure.h
	cd C25
	$(START_TEST) $(MAKE) Cobj25.lib $(END_TEST)
	cd ..

C26\Cobj26.lib: Makefile E1\estructure.h
	cd C26
	$(START_TEST) $(MAKE) Cobj26.lib $(END_TEST)
	cd ..

C27\Cobj27.lib: Makefile E1\estructure.h
	cd C27
	$(START_TEST) $(MAKE) Cobj27.lib $(END_TEST)
	cd ..

C28\Cobj28.lib: Makefile E1\estructure.h
	cd C28
	$(START_TEST) $(MAKE) Cobj28.lib $(END_TEST)
	cd ..

C29\Cobj29.lib: Makefile E1\estructure.h
	cd C29
	$(START_TEST) $(MAKE) Cobj29.lib $(END_TEST)
	cd ..

C30\Cobj30.lib: Makefile E1\estructure.h
	cd C30
	$(START_TEST) $(MAKE) Cobj30.lib $(END_TEST)
	cd ..

C31\Cobj31.lib: Makefile E1\estructure.h
	cd C31
	$(START_TEST) $(MAKE) Cobj31.lib $(END_TEST)
	cd ..

C32\Cobj32.lib: Makefile E1\estructure.h
	cd C32
	$(START_TEST) $(MAKE) Cobj32.lib $(END_TEST)
	cd ..

C33\Cobj33.lib: Makefile E1\estructure.h
	cd C33
	$(START_TEST) $(MAKE) Cobj33.lib $(END_TEST)
	cd ..

C34\Cobj34.lib: Makefile E1\estructure.h
	cd C34
	$(START_TEST) $(MAKE) Cobj34.lib $(END_TEST)
	cd ..

E1\emain.obj:  Makefile E1\Makefile
	$(CP) "$(EIFTEMPLATES)\emain.template" "E1\emain.c"
	cd E1
	$(START_TEST) $(MAKE) emain.obj  $(END_TEST)
	cd ..

E1\eoption.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) eoption.obj  $(END_TEST)
	cd ..

E1\epattern.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) epattern.obj  $(END_TEST)
	cd ..

E1\efrozen.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) efrozen.obj  $(END_TEST)
	cd ..

E1\ecall.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) ecall.obj  $(END_TEST)
	cd ..

E1\eplug.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) eplug.obj  $(END_TEST)
	cd ..

E1\eskelet.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) eskelet.obj  $(END_TEST)
	cd ..

E1\enames.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) enames.obj  $(END_TEST)
	cd ..

E1\evisib.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) evisib.obj  $(END_TEST)
	cd ..

E1\ececil.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) ececil.obj  $(END_TEST)
	cd ..

E1\einit.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) einit.obj  $(END_TEST)
	cd ..

E1\eparents.obj : Makefile E1\Makefile E1\estructure.h
	cd E1
	$(START_TEST) $(MAKE) eparents.obj  $(END_TEST)
	cd ..

OBJECTS = E1\eparents.obj  E1\einit.obj  E1\ececil.obj  E1\evisib.obj  E1\enames.obj  E1\eskelet.obj  E1\eplug.obj  E1\ecall.obj  E1\efrozen.obj  E1\epattern.obj  E1\eoption.obj  C34\Cobj34.lib C33\Cobj33.lib C32\Cobj32.lib C31\Cobj31.lib C30\Cobj30.lib C29\Cobj29.lib C28\Cobj28.lib C27\Cobj27.lib C26\Cobj26.lib C25\Cobj25.lib C24\Cobj24.lib C23\Cobj23.lib C22\Cobj22.lib C21\Cobj21.lib C20\Cobj20.lib C19\Cobj19.lib C18\Cobj18.lib C17\Cobj17.lib C16\Cobj16.lib C15\Cobj15.lib C14\Cobj14.lib C13\Cobj13.lib C12\Cobj12.lib C11\Cobj11.lib C10\Cobj10.lib C9\Cobj9.lib C8\Cobj8.lib C7\Cobj7.lib C6\Cobj6.lib C5\Cobj5.lib C4\Cobj4.lib C3\Cobj3.lib C2\Cobj2.lib C1\Cobj1.lib 

C_OBJECTS = C34\Cobj34.lib C33\Cobj33.lib C32\Cobj32.lib C31\Cobj31.lib C30\Cobj30.lib C29\Cobj29.lib C28\Cobj28.lib C27\Cobj27.lib C26\Cobj26.lib C25\Cobj25.lib C24\Cobj24.lib C23\Cobj23.lib C22\Cobj22.lib C21\Cobj21.lib C20\Cobj20.lib C19\Cobj19.lib C18\Cobj18.lib C17\Cobj17.lib C16\Cobj16.lib C15\Cobj15.lib C14\Cobj14.lib C13\Cobj13.lib C12\Cobj12.lib C11\Cobj11.lib C10\Cobj10.lib C9\Cobj9.lib C8\Cobj8.lib C7\Cobj7.lib C6\Cobj6.lib C5\Cobj5.lib C4\Cobj4.lib C3\Cobj3.lib C2\Cobj2.lib C1\Cobj1.lib 

EOBJECTS = E1\eparents.obj  E1\einit.obj  E1\ececil.obj  E1\evisib.obj  E1\enames.obj  E1\eskelet.obj  E1\eplug.obj  E1\ecall.obj  E1\efrozen.obj  E1\epattern.obj  E1\eoption.obj  




app.exe: app.lnk app.res
	$(COMMAND_MAKEFILE)
	link @app.lnk

..\..\..\app.rc:
	if not exist ..\..\..\app.rc $(MV) "C:\Python27\Eiffel_14.05_95158\studio\config\win64\msc\eiffel.rc" ..\..\..\app.rc

app.res: ..\..\..\app.rc Makefile
	rc -r -foapp.res ..\..\..\app.rc

app.lnk: $(OBJECTS) e1\emain.obj app.res Makefile
	if exist $@ $(RM) $@
	@echo $(LDFLAGS) $(CCLDFLAGS) -OUT:app.exe >> $@
	@echo e1\emain.obj >> $@
	@echo $(EIFLIB) $(EXTERNALS) >> $@
	@echo USER32.lib WS2_32.lib ADVAPI32.lib GDI32.lib SHELL32.lib MSIMG32.lib \
	COMDLG32.lib UUID.lib OLE32.lib OLEAUT32.lib COMCTL32.lib MPR.LIB SHLWAPI.LIB WINSPOOL.LIB $(ISE_SHAREDLIBS) $(PRECOMP_OBJECTS) >> $@
	@echo app.res >> $@
	echo E1\eparents.obj  E1\einit.obj  E1\ececil.obj  E1\evisib.obj  E1\enames.obj   >> $@ 
	echo E1\eskelet.obj  E1\eplug.obj  E1\ecall.obj  E1\efrozen.obj  E1\epattern.obj   >> $@ 
	echo E1\eoption.obj  C34\Cobj34.lib C33\Cobj33.lib C32\Cobj32.lib C31\Cobj31.lib  >> $@ 
	echo C30\Cobj30.lib C29\Cobj29.lib C28\Cobj28.lib C27\Cobj27.lib C26\Cobj26.lib  >> $@ 
	echo C25\Cobj25.lib C24\Cobj24.lib C23\Cobj23.lib C22\Cobj22.lib C21\Cobj21.lib  >> $@ 
	echo C20\Cobj20.lib C19\Cobj19.lib C18\Cobj18.lib C17\Cobj17.lib C16\Cobj16.lib  >> $@ 
	echo C15\Cobj15.lib C14\Cobj14.lib C13\Cobj13.lib C12\Cobj12.lib C11\Cobj11.lib  >> $@ 
	echo C10\Cobj10.lib C9\Cobj9.lib C8\Cobj8.lib C7\Cobj7.lib C6\Cobj6.lib  >> $@ 
	echo C5\Cobj5.lib C4\Cobj4.lib C3\Cobj3.lib C2\Cobj2.lib C1\Cobj1.lib  >> $@ 


RCECIL = MTwmalloc.obj MTwgarcol.obj MTwlocal.obj MTwexcept.obj MTwstore.obj \
	MTwretrieve.obj MTwhash.obj MTwtraverse.obj MTwhashin.obj MTwtools.obj \
	MTwinternal.obj MTwplug.obj MTwcopy.obj MTwequal.obj MTwlmalloc.obj MTwout.obj \
	MTwtimer.obj MTwurgent.obj MTwsig.obj MTwhector.obj MTwcecil.obj MTwbits.obj \
	MTwfile.obj MTwdir.obj MTwmisc.obj MTwerror.obj MTwumain.obj MTwmemory.obj \
	MTwargv.obj MTwboolstr.obj MTwsearch.obj MTwmain.obj MTdebug.obj MTinterp.obj \
	MTwoption.obj MTupdate.obj MTwbench.obj MTwrun_idr.obj MTwcompress.obj \
	MTwconsole.obj MTwpath_name.obj MTwobject_id.obj MTweif_threads.obj \
	MTwgen_conf.obj MTweif_type_id.obj MTwrout_obj.obj MTweif_project.obj \
	MTidrs.obj MTwposix_threads.obj MTnetwork.obj mtipc.obj MTwscoop.obj \
	MTwmemory_analyzer.obj MTwoffset.obj 


#STATIC_CECIL PART
STATIC_CECIL = libapp.lib
cecil: $(STATIC_CECIL)
$(STATIC_CECIL): $(OBJECTS) $(EIFLIB) 
	if exist $@ $(RM) $@
	lib -nologo -OUT:$(STATIC_CECIL) $(OBJECTS) $(EXTERNALS) $(EIFLIB) $(PRECOMP_OBJECTS)



#SHARED_CECIL PART
SHARED_CECIL = libapp$(SHARED_SUFFIX)
dynamic_cecil: $(SHARED_CECIL) 
DEF_FILE= c_app.def 
c_app.def: 
	if exist $@ $(RM) $@
	echo LIBRARY libapp.dll > $@
	type "C:\Python27\Eiffel_14.05_95158\studio\config\win64\templates\cecil.def"  >> $@

SHARED_CECIL_OBJECT = $(OBJECTS) \
		E1/emain.obj
SHAREDFLAGS = $(LDSHAREDFLAGS) \
	/def:$(DEF_FILE) \
	/OUT:$(SHARED_CECIL) /IMPLIB:c_dll_app.lib

$(SHARED_CECIL): $(SHARED_CECIL_OBJECT)  $(DEF_FILE)
	if exist $(SHARED_CECIL) del $(SHARED_CECIL)
	$(SHAREDLINK) $(SHAREDFLAGS) $(SHARED_CECIL_OBJECT) $(PRECOMP_OBJECTS) $(EXTERNALS) $(EIFLIB) $(SHAREDLIBS) 

#SYSTEM_IN_DYNAMIC_LIB PART

DEF_FILE= app.def
dynlib: $(SYSTEM_IN_DYNAMIC_LIB) 
E1\egc_dynlib.obj: Makefile E1\Makefile
	$(CP) "$(EIFTEMPLATES)\egc_dynlib.template" E1\egc_dynlib.c
	cd E1
	$(MAKE) egc_dynlib.obj
	cd ..
E1\edynlib.obj: Makefile E1\Makefile E1\edynlib.c 
	cd E1
	$(MAKE) edynlib.obj
	cd ..

SYSTEM_IN_DYNAMIC_LIB_OBJ = $(OBJECTS) \
		E1\edynlib.obj E1\egc_dynlib.obj 
DYNLIBSHAREDFLAGS = $(LDSHAREDFLAGS) \
	/def:$(DEF_FILE) \
	/OUT:$(SYSTEM_IN_DYNAMIC_LIB) /IMPLIB:dll_app.lib app.res

$(SYSTEM_IN_DYNAMIC_LIB): $(SYSTEM_IN_DYNAMIC_LIB_OBJ)  $(DEF_FILE)
	if exist $(SYSTEM_IN_DYNAMIC_LIB) del $(SYSTEM_IN_DYNAMIC_LIB)
	$(SHAREDLINK) $(DYNLIBSHAREDFLAGS) $(SYSTEM_IN_DYNAMIC_LIB_OBJ) $(PRECOMP_OBJECTS) $(EXTERNALS) $(EIFLIB) $(SHAREDLIBS) 



clean: sub_clean local_clean
clobber: sub_clobber local_clobber

local_clean::
	$(RM) core finished *.obj *.so *.a

local_clobber:: local_clean
	$(RM) Makefile config.sh finish_freezing

sub_clean::
	for i in $(SUBDIRS); \
	do \
		if [ -r $$i\Makefile ]; then \
			(cd $$i ; $(MAKE) clean); \
		fi; \
	done

sub_clobber::
	for i in $(SUBDIRS); \
	do \
		if [ -r $$i\Makefile ]; then \
			(cd $$i ; $(MAKE) clobber); \
		fi; \
	done

